{"version":3,"file":"static/js/362.9979791c.chunk.js","mappings":"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","sources":["components/base-components/FormField/FormField.js","components/CardForm/CardForm.js","components/Home/Home.js","components/LoginForm/LoginForm.js","components/Dashboard.js","components/base-components/ScreenTitle/ScreenTitle.js","components/CardItem/CardItem.js","components/CardTable/CardTable.js","components/base-components/NavigationBar/NavigationBar.js","components/utils.js"],"sourcesContent":["import \"./FormField.css\";\r\n\r\n\r\n/**\r\n * FormField: A base component for a form field, which includes a label and a corresponding input field.\r\n * The label is displayed as a tooltip when the input field is focused or has input.\r\n * The input field is required.\r\n * @param {Object} props - The properties for the FormField component.\r\n * @param {String} props.type - The type of the input field, e.g. \"text\", \"password\", etc.\r\n * @param {String} props.value - The value of the input field.\r\n * @param {Function} props.onChange - The callback function when the input field's value changes.\r\n * @param {String} props.prompt - The label for the input field.\r\n * @param {String} props.styleClass - Any additional CSS classes to be added to the component's root element.\r\n */\r\n\r\nexport default function FormField(props){\r\n\r\n    return(\r\n        <div className={`form-field ${props.styleClass}`} >\r\n            <input name={props.type} type={props.type} title= {props.type} value={props.value} onChange={props.onChange} required/>\r\n            <span className=\"popup_text\">{props.prompt}</span>\r\n        </div>\r\n    );\r\n}","\r\nimport {useState} from \"react\";\r\nimport {ref, set, get} from \"firebase/database\";\r\nimport {auth} from \"../FireBase\";\r\nimport database from \"../FireBase\";\r\n\r\nimport ScreenTitle from \"../base-components/ScreenTitle/ScreenTitle\";\r\nimport FormField from \"../base-components/FormField/FormField\";\r\nimport {splitAndCapitalizeEmail} from \"../utils\";\r\nimport \"./CardForm.css\";\r\n\r\nexport default function CardForm(props){\r\n\r\n    const [title , setTitle] = useState(\"\");\r\n    const [imagePath , setImagePath] = useState(\"\");\r\n    const [date , setDate] = useState(\"\");\r\n    const [image, setImage] = useState(null);\r\n\r\n    const titleHandler = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n\r\n    const imageHandler = (e) => {\r\n        setImagePath(e.target.value);\r\n        const reader = new FileReader();\r\n\r\n        try{\r\n            reader.onload = (event) => setImage(event.target.result);\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n            alert(\"Image not selected\");\r\n            setImage(null);\r\n            setImagePath(\"\");\r\n        }\r\n    }\r\n\r\n    const dateHandler = (e) => {\r\n        setDate(e.target.value);\r\n    }\r\n\r\n    const SubmitHandler = async (e) => {\r\n        e.preventDefault();\r\n        console.log(title  , date);\r\n        \r\n        //Add new card to displayed cards on table\r\n        props.addRow(title , image , date);\r\n\r\n        //Add new actor to Firebase/user/actors\r\n        const refernceURL = `/users/${auth.currentUser.uid}/`;\r\n        console.log(refernceURL);\r\n        const dbRef = ref(database, refernceURL);\r\n        console.log(dbRef);\r\n        const userSnapshot  = await get(dbRef);\r\n        const currentUser = userSnapshot.exists()? userSnapshot.val() : {name: splitAndCapitalizeEmail(auth.currentUser.email), actors: []};\r\n        try{\r\n            currentUser.actors.push({ name: title, avatar: image });\r\n            await set(dbRef, currentUser);\r\n        }\r\n        catch (error){\r\n            console.error(\"Error adding actor to database: \", error);\r\n        }\r\n\r\n\r\n    }\r\n    return(\r\n        <div className = \"card-form-container\">\r\n            <ScreenTitle title=\"Add your own actor\" design_id=\"card-form-title\"/>\r\n            <form onSubmit={SubmitHandler} className = {`${props.styleClass} `}>\r\n                <div>\r\n                    <FormField \r\n                        type=\"text\"\r\n                        prompt=\"New Actor\" \r\n                        styleClass=\"card-form-field\" \r\n                        value={title} \r\n                        onChange={titleHandler}/>\r\n                </div>\r\n                <div className=\"image-selection\">\r\n                    <label htmlFor=\"file-input\" className=\"choose-file-label\">{(imagePath===\"\")? \"Choose actor image...\":\"Image selected.\"}</label>\r\n                    <input \r\n                        id=\"file-input\"\r\n                        type=\"file\" \r\n                        value={imagePath}\r\n                        accept=\"image/*\" \r\n                        onChange={imageHandler}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"date\" min=\"1960-01-01\" max=\"2025-04-07\"  className= \"submit-button\" id= \"date-btn\" value={date} onChange={dateHandler}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" className= \"submit-button\" id= \"add-item-btn\">Add Actor</button>\r\n                \r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n          \r\n        );\r\n}","import {useEffect, useState} from \"react\";\t\r\n\r\n\r\nimport CardForm from \"../CardForm/CardForm\";\r\nimport CardTable from \"../CardTable/CardTable\";\r\n\r\nimport \"../utils.css\";\r\nimport \"./Home.css\";\r\nimport bg from \"../../assets/images/scrollableBackground.png\";\r\nimport NavigationBar from \"../base-components/NavigationBar/NavigationBar\";\r\n\r\n/**\r\n * A component that renders the main page of the application. The page is\r\n * divided into two sections. The top section contains a CardForm component\r\n * that allows the user to add a new row to the table. The bottom section\r\n * contains a CardTable component that displays the table with the rows that\r\n * the user has entered. The component uses the useState hook to store the\r\n * data in the table and the useEffect hook to fetch the data when the\r\n * component is mounted. The data is fetched from the reqres.in API. The\r\n * component also sets the page title and the background image of the page\r\n * when it is mounted.\r\n * \r\n * @returns A JSX element representing the Home component.\r\n */\r\nexport default function Home() {\r\n\r\n    const [dummyUsers, setDummyUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n\r\n    useEffect(() => { \r\n        const fetchUsers = async () => {\r\n            try {\r\n                const totalPages = 2;\r\n                const fetches =[];\r\n                for (let i = 1; i <= totalPages; i++) {\r\n                    const path = `https://reqres.in/api/users?page=${i}`;\r\n                    fetches.push(fetch(path).then(response => response.json()));\r\n                    console.log(path);\r\n                }\r\n                const data = await Promise.all(fetches);\r\n                setDummyUsers(data.flatMap(page =>\r\n                    page.data.map(user=> ({\r\n                        name: `${user.first_name} ${user.last_name}`,\r\n                        avatar: user.avatar\r\n                    }))\r\n                ));\r\n                console.log(\"Actors added....!!!\");\r\n                setLoading(false);\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchUsers();\r\n        //Setting page general attributes\r\n        document.title = \"Home Page\";\r\n        document.body.style.backgroundImage = `url(${bg})`; ;\r\n        \r\n        document.body.style.backgroundPosition = \"top center\";\r\n        document.body.style.backgroundSize = \"cover\"; // This fills the entire screen\r\n        document.body.style.backgroundRepeat = \"repeat-y\";\r\n        document.body.style.backgroundAttachment = \"scroll\";\r\n        document.body.style.margin= \"0\";\r\n        document.body.style.padding= \"0\";\r\n\r\n    }, []);\r\n    \r\n    console.log(dummyUsers);\r\n    if(loading) return <div>Loading...</div>;\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <NavigationBar currentPage=\"home\"/>\r\n            <div className=\"page-container\">\r\n                <CardForm styleClass=\"card-form\" addRow={(name, avatar) =>{\r\n                    const newRow = { name: name, avatar: avatar };\r\n                    setDummyUsers(prev => [...prev, newRow]);\r\n                    } }/>\r\n                <CardTable tableTitle= \"Our Team\" styleClass=\"card-table\" rows={dummyUsers}/> \r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, useEffect, startTransition } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {auth} from \"../FireBase\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nimport ScreenTitle from \"../base-components/ScreenTitle/ScreenTitle\";\r\nimport FormField from \"../base-components/FormField/FormField\";\r\nimport \"./LoginForm.css\";\r\nimport \"../utils.css\";\t\r\nimport bg from\"../../assets/images/Fox_in_forest_background.png\";\r\n\r\nexport default function LoginForm() {\r\n\r\n    useEffect(() => {\r\n        document.title = \"Login\";\r\n        document.body.style.backgroundImage = `url(${bg})`; \r\n        document.body.style.backgroundPosition = \"center\";\r\n        document.body.style.backgroundRepeat = \"no-repeat\";\r\n        document.body.style.transition = \"background-image 0.5s ease-in-out\";\t\r\n        \r\n    }, []);\r\n    \r\n    const [email , setEmail] = useState(\"\");\r\n    const [password , setPassword] = useState(\"\");\r\n    const navigation = useNavigate();\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            await signInWithEmailAndPassword(auth, email , password);\r\n            alert(\"Signed In Successfully\");\r\n        }\r\n        catch(error){\r\n            alert(error.message);\r\n            console.log(error);}\r\n    }\r\n\r\n    const goTo = (path) => {\r\n        startTransition(() => {\r\n            navigation(path);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login auth-form-container\">\r\n            <ScreenTitle title=\"Login\"/>\r\n            <FormField type=\"email\" value={email} prompt=\"Email\" onChange={(e) => setEmail(e.target.value)}/>\r\n            <FormField type=\"password\" value={password} prompt=\"Password\" onChange={(e) => setPassword(e.target.value)}/>\r\n            <input className=\"submit-button\" onClick={handleSignIn} type=\"submit\" value=\"Sign in\"/>\r\n            <div className=\"links-group\">\r\n                <button onClick={() => goTo(\"/\")}>Forgot Password</button>\r\n                <button onClick={() => goTo(\"/signup\")}>Sign Up</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","\"use client\";\r\nimport { useContext } from \"react\";\r\nimport Home from \"./Home/Home\";\r\nimport { userContext } from \"../UserProvider\";\r\nimport \"./utils.css\";\r\n\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\n\r\n\r\n/**\r\n * A component that renders the main page of the application. If the user is \r\n * signed in, the component renders the Home component. If the user is not \r\n * signed in, the component renders the LoginForm component. The component \r\n * uses the userContext to determine if the user is signed in.\r\n * \r\n * @returns A JSX element representing the Dashboard component.\r\n */\r\nfunction Dashboard() {\r\n\r\n    const { user } = useContext(userContext);\r\n\r\n    return (\r\n        <div >\r\n            { user ? (\r\n                <div>\r\n                    <Home/>\r\n                </div>\r\n            ):\r\n             (   \r\n                <div className=\"center-container\">\r\n                    <LoginForm/>\r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import \"./ScreenTitle.css\"\r\n\r\n/**\r\n * A functional component that displays a screen title.\r\n * \r\n * @param {object} props - The props object.\r\n * @param {string} props.title - The text to display as the screen title.\r\n * @param {string} props.design_id - The id to assign to the title element.\r\n * \r\n * @returns A JSX element representing the screen title.\r\n */\r\n\r\nexport default function ScreenTitle(props){\r\n    \r\n    return(\r\n        <h2 className=\"screen-title\" id={props.design_id}>{props.title}</h2>\r\n    )\r\n}","\r\nimport \"./CardItem.css\"\r\n\r\nexport default function CardItem(props){\r\n\r\n\r\n    return(\r\n        <div className=\"card-item {props.extraStyleClass}\" >\r\n            <img \r\n            src={props.avatar} \r\n            alt={props.name}\r\n            />   \r\n            <span>{props.name}</span>        \r\n        </div>\r\n    );\r\n}","import CardItem from \"../CardItem/CardItem.js\";\r\nimport ScreenTitle from \"../base-components/ScreenTitle/ScreenTitle\";\r\nimport \"./CardTable.css\";\r\n\r\nexport default function CardTable(props){\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <ScreenTitle title={props.tableTitle}/>\r\n            <div className='center-container'>\r\n                \r\n                <div className =\"{props.styleClass} expense-grid \">\r\n                    {props.rows? props.rows.map((item , index) => (\r\n                        <CardItem \r\n                            key={index} \r\n                            name={item.name} \r\n                            avatar={item.avatar}\r\n                            extraStyleClass=\"\" /> \r\n                        )): <></>}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      \r\n    );\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { useContext, startTransition } from 'react';\r\n\r\n\r\nimport { splitAndCapitalizeEmail } from \"../../utils\";\r\nimport ScreenTitle from \"../ScreenTitle/ScreenTitle\";\r\nimport { userContext } from \"../../../UserProvider\";\r\n\r\nimport \"./NavigationBar.css\";\r\n\r\n\r\n/**\r\n * A NavigationBar component that renders a menu with options for the \r\n * main pages of the application. The component uses the userContext \r\n * to determine if the user is signed in and if so, displays the user's \r\n * name and a log out button. The component also takes a currentPage \r\n * prop which determines which menu item is active.\r\n * \r\n * @param {object} props - An object containing the currentPage prop.\r\n * @param {string} props.currentPage - The current page of the application.\r\n * \r\n * @returns A JSX element representing the NavigationBar component.\r\n */\r\nexport default function NavigationBar(props) {\r\n\r\n    const {user, signOut} = useContext(userContext);\r\n    const navigation = useNavigate();\r\n\r\n    const goTo = (path) => {\r\n        startTransition(() => {\r\n            navigation(path);\r\n        });\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"docked-container welcome-docker\">\r\n                        <ScreenTitle design_id=\"welcome-title\" title={user? `Welcome ${splitAndCapitalizeEmail(user.email)}`:`Welcome Guest`}/>\r\n                        <button className=\"log-out-button\" onClick={signOut} aria-label=\"Sign Out\"></button>\r\n                        <menu className=\"menu-container\">\r\n                            <button onClick={() => goTo(\"/\")}  className={`menu-item ${props.currentPage === \"home\"? \"active\" : \"\"}`}>Home</button>\r\n                            <button onClick={() => goTo(\"/profile\")} className={`menu-item ${props.currentPage === \"profile\"? \"active\" : \"\"}`} >Profile</button>\r\n                        </menu>\r\n                        \r\n            <span id=\"menu-backgroundEffect\"></span>        \r\n        </div>\r\n        \r\n\r\n    )\r\n}","const splitAndCapitalizeEmail = (email) => email.split(\"@\")[0].charAt(0).toUpperCase() + email.split(\"@\")[0].slice(1);\r\n\r\nexport {splitAndCapitalizeEmail};"],"names":["FormField","props","_jsxs","className","styleClass","children","_jsx","name","type","title","value","onChange","required","prompt","CardForm","setTitle","useState","imagePath","setImagePath","date","setDate","image","setImage","ScreenTitle","design_id","onSubmit","async","e","preventDefault","console","log","addRow","refernceURL","auth","currentUser","uid","dbRef","ref","database","userSnapshot","get","exists","val","splitAndCapitalizeEmail","email","actors","push","avatar","set","error","target","htmlFor","id","accept","reader","FileReader","onload","event","result","readAsDataURL","files","alert","min","max","Home","dummyUsers","setDummyUsers","loading","setLoading","useEffect","totalPages","fetches","i","path","fetch","then","response","json","data","Promise","all","flatMap","page","map","user","first_name","last_name","fetchUsers","document","body","style","backgroundImage","bg","backgroundPosition","backgroundSize","backgroundRepeat","backgroundAttachment","margin","padding","NavigationBar","currentPage","newRow","prev","CardTable","tableTitle","rows","LoginForm","transition","setEmail","password","setPassword","navigation","useNavigate","goTo","startTransition","onClick","signInWithEmailAndPassword","message","useContext","userContext","CardItem","src","alt","item","index","extraStyleClass","_Fragment","signOut","split","charAt","toUpperCase","slice"],"sourceRoot":""}